higher_dimensions are examples of such operators . we may also consider more_general carder ´ on - zygmund_operators . in fact , our arguments work well for operators with variable kernels k satisfying standard size and regularity_conditions . we will not_pursue here these generalizations . instead , we will make some_comments on how to extend our results to this more_general_setting . in this context , a weight simply means a non - negative function w : rn → [ 0 , ∞ ] . such w can_be interpreted_as the density of an absolutely_continuous measure . this measure is usually_denoted by the same letter as its density . that is , if w is a weight in rn , for a measurable e ⊂_rn one writes w ( e ) = ´ e w ( x ) dx and for f a measurable_function we say that f ∈ lp ( w ) if kf_klp (BRd . , lazarian a . , kowal g . , 2008 , apj , 679 , 537 gardiner t . a . , frank a . , 2001 , apj , 557 , 250 girart j . m . , patel n . , vlemmings w . h . t . , rao r . , 2012 , apj , 751 , l20 goldreich p . , kylafis n . d . , 1981 , apj , 243 , l75 goldreich p . , kylafis n . d . , 1982 , apj , 253 , 606 goodrich r . wBRthe problem . in control theory methods it is attempted to solve the problems through using prevention or active methods through different controlling done on major components of the cloud_resources . the last category , which is used in different areas such as economics , engineering and bioinformatics , tries to suggest some solutions through using the applied changes in different periods of time [ 11 ] . the important points in auto - scaling of the resources are : ( 1 ) changing the number of resources , ( 2 ) ability to anticipate workflow , ( 3 ) and calculating the amount of required resources at the time when workflow increases or decreases . furthermore , another_important area in auto - scaling is specifying of the resources by considering the optimizing of different factors of cost . iii . proposed model in order to solve this problem and auto - scaling of the cloud_resources , one can deduce the number of incoming request in every service , through considering the amount of changing requests in different periods of time and through monitoring incoming_requests to the system . this is done in a way that by putting these_quantities together , we would come_up with a request pattern like fig . 3 . this pattern shows_how many requests we have in every t period of time . figure 3 . method of calculating request pattern based_on service_requests categories . now , one can find a specific number of these categories which have almost similar patterns through clustering . if we can calculate a specific pattern through the quantity of the resources , and if we could accurately_estimate the number of needed virtual_machines , we canBR1964 . [ 20 ] d . harari , s . mollerach , and e . roulet . signatures of galactic magnetic lensing upon ultra_high energy_cosmic_rays . journal of high_energy physics , 2 : 35 , february 2000 . [ 21 ] g . giacinti , m . kachelriess , d . v . semikoz , and g . sigl . ultrahigh_energy nuclei in the turbulent galactic_magnetic_field . astroparticle_physics , 35 : 192 – 200 , november_2011 . [ 22 ] g . r . farrar , r . jansson , a . keivani , j . roberts , and m . sutherland . deflectionsBR, and g . 19 s . j . moon , h . jin , w . s . choi , j . s . lee , s . s . a . seo , j . yu , g . cao , t . w . noh , and y . s . cao , phys . rev . b 84 , 100402 ( 2011 ) . lee , phys . rev . b 80 , 195110 ( 2009 ) . 20 s . j . moon , h . jin , k . w . kim , w . s . choi , y . s . lee , j . yu , g . cao , a . sumi , h . funakubo , c . bernhard , and t . w . noh , phys . rev . lett . 101 , 226402 ( 2008 ) . 21 j . m . lebeau , s . d . findlay , l . j . allen , and s . stemmer , ultramicroscopy 110 , 118 ( 2010 ) . 22 23 p . r . willmott , s . a . pauli , r . herger , c . m . schlep ü_tz , d . martoccia , b . d . patterson , b . j . hwang , j . y . zhang , j . son , and s . stemmer , appl . phys . lett . 100 , 191909 ( 2012 ) . delley , r . clarke , d . kumah , c . cionca , and y . yacoby , phys . rev . lett . 99 , 155502 ( 2007 ) .BRof the star is b ( r ) = 1 / a ( r ) = 1 − 2m / r + q2 / r2 , m ( r ) = m , q ( r ) = q , besides p ( r ) = 0 , and so ρ ( r ) = 0 for a polytropic_equation of state , which , together_with a smooth charge_density profile , is equivalent to the full set of junction_conditions for boundary_layers in general_relativity in this particular instance . 2 . 3 . equation of state and charge_density relation 2 . 3 . 1 . the equation of state as_mentioned_above , to complete the set of equations it is necessary to add two more relations to the charged_fluid system . usually , an_appropriate equation of state is furnished . among the simplest choices , a polytropic_equation of state is frequently_used . for the purpose of the present analysis , following tooper [ 12 ] , it is convenient to choose the following polytropic relation p = ω ρ γ , ( 16 ) where ω is the polytropic_constant and we use the name polytropic_exponent for the parameter γ . equation ( 16 ) is a good equation of state for a newtonian ideal_fluid , indeed it is equivalent to that of a nonrelativistic fluid for small pressures , when compared to the energy_density [ 10 ] . however ,BRcontrast to this , the dynamics of the solvent is explicitly resolved by the lattice_boltzmann part of our simulation methodology . to proceed , we assume_that the average flow_velocity and its fluctuations are uncorrelated ( h ∆ ¯ ux δ uxi = 0 ) and obtain , as a central result , a relation_between the velocity fluctuations and the suspension_viscosity α i p α h δ u2 γ 2 = UNK η ( 1 − φ ) η 0 − 1 UNK l2 . ( 1 ) fig . 3 : effective interparticle gap size l as obtained in our_simulations via eq . ( 1 ) ( symbols ) . the dashed_curve_represents the theoretical estimate of eq . ( 2 ) , taking the scale of the particle radius rBRthe middle of the set of indices . the equations that produce the bs equations for m22 , m24 , m42 and m44 are : m22 : δ 2 φ δ rab δ gcd = δ gxy δ rab δ 2 φ δ gxy δ gcd + δ vxywz δ rab δ 2 φ δ vxywz δ gcd , m24 : δ 2 φ δ ref δ vabcd = δ gxy δ ref δ 2 φ δ gxy δ vabcd + δ vxywz δ ref δ 2 φ δ vxywz δ vabcd , ( 20 ) ( 21 ) m42 : δ 2 φ δ rabcd δ gef = δ gxy δ rabcd δ 2 φ δ gxy δ gef + δ vxywz δ rabcd δ 2 φ δ vxywz δ gef , 7 ( 22 ) m44 : δ 2 φ δ rabcd δ vef gh = δ gxy δ rabcd δ 2 φ δ gxy δ vef gh + δ vxywz δ rabcd δ 2 φ δ vxywz δ vef gh . ( 23 ) first we calculate the derivatives directly from the inverse_transform . these results will be set equal to the result we obtain from the right_side of equations ( 20 ) - ( 23 ) , and therefore we refer to them as the left sides of each equation . we obtain ( see equation ( 11 ) ) : abcd = − UNK δ ac δ bd + δ ad δ bc UNK , ( 24 ) ef ; abcd = 0 , 2 · 2 · lhs22 lhs24 2 · 4 ! · lhs42 4 ! · 4 ! · lhs44 abcdBR( µ − log m × ) + m1 − α σ × < x ≤ 1 . ( c8 ) 2 . ( c ) uniform_distribution follows a power_law_distribution we next consider the case f1 ( m ) = 1 / a and f2 ( m ) = ( α − 1 ) m − α with m0 = 0 . for this case , we have q1 ( r ) = r1 ( r ) = r a r2 2a , q2 ( r ) = r1 − α ; , r2 ( r ) = ( α − 2 ) r2 − α ( α − 2 ) , ( c9 ) ( c10 ) y = _______ ___________ the g index is calculated as g = × − am2 − 2 α m2 ( m × + am1 − α and k index is determined_by the solution of × )  vuut1 +  × ) 2 − ( α − 2 ) m2 − α × + 2a ( α − 1 ) ( m2 × k = 2 ( m × + am1 − α × ) 2 1 α − 1 ( α − 1 ) 2a ( α − 2 ) m2 ( m × + am1 − α × ) ( α − 2 ) m2 − α × × + 2a ( α − 1 ) 2 − α 1 − α 2 − α 1 − α , ( 1 − k ) 4 ( m × + am 1 − α × 2aBRthe detected event [ 3 ] . when a large number of sensor_nodes become active , so as to transport data to the base_station ( bs ) , packet collisions and network level congestion are quite_probable . buffer_overflow occurs due_to further lifetime . if limited buffer_size of the nodes causing packet_drops which in turn decreases network performance and throughput . moreover , inexpensive sensor_nodes are prone to failure and the faulty_nodes create various security_threats which aggravate the problem of congestion by diffusing useless packets , flooding with fake messages , intermittent jamming and / or retransmitting the same message several_times . the resulting effect is redundant computation and communication , causing wastage of energy resources and a